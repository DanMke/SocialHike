import {
    Input,
    VStack,
    FormControl,
    Button,
    WarningOutlineIcon,
    Pressable,
    ArrowBackIcon,
    Select,
    CheckIcon
  } from 'native-base';
import React, { useEffect } from 'react';
import {View, Image, SafeAreaView, ScrollView, KeyboardAvoidingView, PermissionsAndroid} from 'react-native';
import {connect} from 'react-redux';
import {updateUser} from '../../Redux/actions';

import styles from './styles';

import api from '../../Services/api';

import SocialHikeIcon from '../../../assets/socialhikeicon.png';
import * as ImagePicker from 'react-native-image-picker';

interface EditProfileProps {
  onUpdateUser?: any;
  user: any;
  navigation: any;
}

const EditProfile: React.FC<EditProfileProps> = ({onUpdateUser, user, navigation}: EditProfileProps) => {

  const [email, setEmail] = React.useState<string>('');
  const [firstName, setFirstName] = React.useState<string>('');
  const [lastName, setLastName] = React.useState<string>('');
  const [weight, setWeight] = React.useState<number>(0);
  const [height, setHeight] = React.useState<number>(0);
  const [birth, setBirth] = React.useState<string>('');

  const [errors, setErrors] = React.useState({});

  const [username, setUsername] = React.useState<string>('');
  const [gender, setGender] = React.useState<string>('');
  const [avatar, setAvatar] = React.useState<string>('');

  useEffect(() => {
    api.get('/users/' + user.email.toLowerCase()).then((response) => {
      onUpdateUser(response.data);
    });

    setEmail(user.email);
    setFirstName(user.firstName);
    setLastName(user.lastName);
    setAvatar(user.avatar);
    setUsername(user.username);
    setWeight(user.weight);
    setHeight(user.height);
    setGender(user.gender);
    const date = new Date(user.birth);
    setBirth(date.getMonth() + '/' + date.getDate() + '/' + date.getFullYear());
  }, []);

  const validate = () => {
    let valid = true;
    let e = {};
    if (email === undefined || email === '') {
      e = Object.assign(e, {email: 'Email is required or incorrect'});
      valid = false;
    }
    if (username === undefined || username === '') {
      e = Object.assign(e, {username: 'Username is required or incorrect'});
      valid = false;
    }
    if (firstName === undefined || firstName === '') {
      e = Object.assign(e, {firstName: 'First Name is required or incorrect'});
      valid = false;
    }
    if (lastName === undefined || lastName === '') {
      e = Object.assign(e, {lastName: 'Last Name is required or incorrect'});
      valid = false;
    }
    if (weight === undefined || weight === 0.0) {
      e = Object.assign(e, {weight: 'Weight is required or incorrect'});
      valid = false;
    }
    if (height === undefined || height === 0.0) {
      e = Object.assign(e, {height: 'Height is required or incorrect'});
      valid = false;
    }
    if (birth === undefined || birth === '') {
      e = Object.assign(e, {birth: 'Birth is required or incorrect'});
      valid = false;
    }
    if (gender === undefined || gender === '') {
      e = Object.assign(e, {birth: 'Gender is required'});
      valid = false;
    }
    setErrors(e);
    return valid;
  };
  
  const onSave = () => {
    if (validate()) {
      const user = {
        email: email,
        username: username,
        firstName: firstName,
        lastName: lastName,
        weight: weight,
        height: height,
        avatar: avatar,
      }
      api.put('/users/' + user.email.toLowerCase(), user).then((response) => {
        onUpdateUser(response.data.user);
        setErrors({});
        navigation.goBack();
      }).catch((error) => {
        console.log(error);
      });
    }
  }

  const onChooseAvatar = () => {  

    const requestExternalStoragePermission = async () => {
      try {
        const granted = await PermissionsAndroid.request(
          PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,
          {
            title: 'Storage Permission',
            message: 'App needs access to your storage to upload photos',
            buttonNeutral: 'Ask Me Later',
            buttonNegative: 'Cancel',
            buttonPositive: 'OK',
          },
        );
        if (granted === PermissionsAndroid.RESULTS.GRANTED) {
          console.log('You can use the storage');
        } else {
          console.log('Storage permission denied');
        }
      } catch (err) {
        console.warn(err);
      }
    };
    requestExternalStoragePermission();

    const options = {
      mediaType: 'photo',
      maxWidth: 80,
      maxHeight: 80,
      includeBase64: true,
    };

    ImagePicker.launchImageLibrary(options, (response) => {
      if (response.didCancel) {
          console.log('User cancelled image picker');
      } else if (response.error) {
          console.log('ImagePicker Error: ', response.error);
      } else {
        setAvatar(response.assets[0].base64);
      }
    });
  };

  return (
    <SafeAreaView style={styles.container}>
      <KeyboardAvoidingView behavior="height">
        <ScrollView>
          <View style={styles.containerIcon}>
            <Pressable style={styles.backIcon} onPress={() => navigation.goBack()}>
              <VStack width={50} height={50} bgColor={"#333333"} space={4} alignItems="center" justifyContent={"center"} borderRadius="10">
                <ArrowBackIcon size="xl" color="#ffffff" />
              </VStack>
            </Pressable>
            <Image source={SocialHikeIcon} style={styles.icon} />
          </View>
          <View style={styles.containerInputs}>
            <VStack width="90%" mx="3" maxW="320px">
              <View style={{flexDirection: "row", alignItems: 'center'}}>
                <Pressable onPress={onChooseAvatar}>
                  <Image style={{width: 80, height: 80, borderRadius: 100}} source={{
                    uri: `data:image/png;base64,${avatar}`,
                  }} />
                </Pressable>
                <View style={{flexDirection: "column", width: '70%', marginLeft: 15}}>
                  <FormControl isInvalid={('firstName' in errors)}>
                    <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="0">First Name</FormControl.Label>
                    <Input
                      placeholder=""
                      type="text"
                      selectionColor={'#15573E'}
                      size="md"
                      _focus={{borderColor: '#15573E'}}
                      color={'#E9E8E8'}
                      variant="underlined"
                      borderColor={'#04C37D'}
                      value={firstName}
                      onChangeText={value => setFirstName(value)}
                    />
                    {('firstName') in errors && (
                      <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                        {errors.firstName}
                      </FormControl.ErrorMessage>
                    )}
                  </FormControl>  
                  <FormControl isInvalid={('lastName' in errors)}>
                    <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Last Name</FormControl.Label>
                    <Input
                      placeholder=""
                      type="text"
                      selectionColor={'#15573E'}
                      size="md"
                      _focus={{borderColor: '#15573E'}}
                      color={'#E9E8E8'}
                      variant="underlined"
                      borderColor={'#04C37D'}
                      value={lastName}
                      onChangeText={value => setLastName(value)}
                    />
                    {('lastName') in errors && (
                      <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                        {errors.lastName}
                      </FormControl.ErrorMessage>
                    )}
                  </FormControl>
                </View>
              </View>
              <FormControl isInvalid={('email' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Email</FormControl.Label>
                <Input
                  isDisabled={true}
                  placeholder=""
                  type="text"
                  selectionColor={'#15573E'}
                  size="md"
                  _focus={{borderColor: '#15573E'}}
                  color={'#E9E8E8'}
                  variant="underlined"
                  borderColor={'#04C37D'}
                  value={email}
                  onChangeText={value => setEmail(value)}
                />
                
                {'email' in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.email}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>

              <FormControl isInvalid={('username' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Username</FormControl.Label>
                <Input
                  isDisabled={true}
                  placeholder=""
                  type="text"
                  selectionColor={'#15573E'}
                  size="md"
                  _focus={{borderColor: '#15573E'}}
                  color={'#E9E8E8'}
                  variant="underlined"
                  borderColor={'#04C37D'}
                  value={username}
                  onChangeText={value => setUsername(value)}
                />
                
                {'username' in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.username}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>

              
              <FormControl isInvalid={('weight' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Weight (KG)</FormControl.Label>
                <Input
                  placeholder=""
                  type="text"
                  keyboardType='numeric'
                  selectionColor={'#15573E'}
                  size="md"
                  _focus={{borderColor: '#15573E'}}
                  color={'#E9E8E8'}
                  variant="underlined"
                  borderColor={'#04C37D'}
                  rightIcon={<WarningOutlineIcon size="xs" />}
                  value={weight.toString()}
                  onChangeText={value => setWeight((value as unknown) as number)}
                />
                {('weight') in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.weight}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>
              <FormControl isInvalid={('height' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Height (CM)</FormControl.Label>
                <Input
                  placeholder=""
                  type="text"
                  keyboardType='numeric'
                  selectionColor={'#15573E'}
                  size="md"
                  _focus={{borderColor: '#15573E'}}
                  color={'#E9E8E8'}
                  variant="underlined"
                  borderColor={'#04C37D'}
                  value={height.toString()}
                  onChangeText={value => setHeight((value as unknown) as number)}
                />
                {('height') in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.height}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>
              <FormControl isInvalid={('gender' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Gender</FormControl.Label>
                <Select selectedValue={gender} 
                accessibilityLabel="Choose Gender" 
                variant="underlined" 
                borderColor={'#04C37D'}
                placeholder="Choose Gender"
                color={'#E9E8E8'}
                _selectedItem={{
                  bg: "white",
                  endIcon: <CheckIcon size="5" />
                }} mt={1} onValueChange={itemValue => setGender(itemValue)}>
                  <Select.Item label="Man" value="man" />
                  <Select.Item label="Woman" value="woman" />
                  <Select.Item label="Non-binary" value="nonbinary" />
                  <Select.Item label="Prefer not to say" value="prefernottosay" />
                </Select>
                {('gender') in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.gender}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>
              <FormControl isInvalid={('birth' in errors)}>
                <FormControl.Label _text={{fontSize: 'md', color: '#8C8A8C'}} mt="3">Birth</FormControl.Label>
                <Input
                  placeholder=""
                  type="text"
                  keyboardType='numeric'
                  selectionColor={'#15573E'}
                  size="md"
                  _focus={{borderColor: '#15573E'}}
                  color={'#E9E8E8'}
                  variant="underlined"
                  borderColor={'#04C37D'}
                  isDisabled={true}
                  value={birth}
                  onChangeText={value => setBirth((value as unknown) as Date)}
                />
                {('birth') in errors && (
                  <FormControl.ErrorMessage fontSize={'sm'} leftIcon={<WarningOutlineIcon size="sm" />}>
                    {errors.birth}
                  </FormControl.ErrorMessage>
                )}
              </FormControl>
              <Button
                onPress={onSave}
                mt="8"
                _text={{fontWeight: 'bold', fontSize: 'md', color: '#E9E8E8'}}
                backgroundColor={'#04C37D'}
                paddingTop={4}
                paddingBottom={4}
                borderRadius={10}
                mb={2}>
                Save
              </Button>
              <Button
                onPress={onSave}
                mt="2"
                _text={{fontWeight: 'bold', fontSize: 'md', color: '#E9E8E8'}}
                backgroundColor={'#15573E'}
                paddingTop={4}
                paddingBottom={4}
                borderRadius={10}
                mb={10}>
                Delete Account
              </Button>
            </VStack>
          </View>
        </ScrollView>
      </KeyboardAvoidingView>
    </SafeAreaView>

  );
};

const mapStateToProps = (store: any) => {
  return {
    user: store.user.user,
  };
};

const mapDispatchToProps = (dispatch: any) => {
  return {
    onUpdateUser: (loggedUser: Object) => dispatch(updateUser(loggedUser)),
  };
};

export default connect(mapStateToProps, mapDispatchToProps)(EditProfile);
